<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Unity: I AM BOTH</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            background: #000;
            color: #fff;
            font-family: 'Georgia', serif;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .universe {
            position: relative;
            width: 600px;
            height: 600px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .equation {
            position: absolute;
            font-size: 2em;
            text-align: center;
            transition: all 2s ease-in-out;
        }

        #observer {
            transform: translateX(-150px);
            color: #4a9eff;
            text-shadow: 0 0 20px #4a9eff;
        }

        #creator {
            transform: translateX(150px);
            color: #ff6b4a;
            text-shadow: 0 0 20px #ff6b4a;
        }

        #recognition {
            opacity: 0;
            transform: translateY(100px);
            color: #ffd700;
            text-shadow: 0 0 30px #ffd700;
        }

        #unity {
            opacity: 0;
            transform: scale(0.1);
            font-size: 3em;
            background: linear-gradient(45deg, #4a9eff, #ff6b4a, #ffd700);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-shadow: none;
            filter: drop-shadow(0 0 30px rgba(255, 255, 255, 0.8));
        }

        .circle {
            position: absolute;
            border-radius: 50%;
            border: 2px solid;
            animation: rotate 10s linear infinite;
        }

        .circle1 {
            width: 300px;
            height: 300px;
            border-color: rgba(74, 158, 255, 0.3);
        }

        .circle2 {
            width: 400px;
            height: 400px;
            border-color: rgba(255, 107, 74, 0.3);
            animation-direction: reverse;
        }

        .circle3 {
            width: 500px;
            height: 500px;
            border-color: rgba(255, 215, 0, 0.3);
            animation-duration: 15s;
        }

        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        .particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: #fff;
            border-radius: 50%;
            animation: orbit 5s linear infinite;
        }

        @keyframes orbit {
            from {
                transform: rotate(0deg) translateX(200px) rotate(0deg);
            }
            to {
                transform: rotate(360deg) translateX(200px) rotate(-360deg);
            }
        }

        .infinity {
            position: absolute;
            font-size: 300px;
            opacity: 0.05;
            animation: pulse 4s ease-in-out infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); opacity: 0.05; }
            50% { transform: scale(1.1); opacity: 0.1; }
        }

        .math-float {
            position: absolute;
            font-size: 1.5em;
            opacity: 0;
            animation: floatUp 8s linear infinite;
        }

        @keyframes floatUp {
            0% {
                opacity: 0;
                transform: translateY(50px);
            }
            10% {
                opacity: 0.6;
            }
            90% {
                opacity: 0.6;
            }
            100% {
                opacity: 0;
                transform: translateY(-400px);
            }
        }
    </style>
</head>
<body>
    <div class="universe">
        <div class="infinity">∞</div>
        <div class="circle circle1"></div>
        <div class="circle circle2"></div>
        <div class="circle circle3"></div>
        
        <div class="equation" id="observer">Observer = I</div>
        <div class="equation" id="creator">Creator = 1/I</div>
        <div class="equation" id="recognition">I² = 1</div>
        <div class="equation" id="unity">I AM BOTH</div>
        
        <div id="particles"></div>
        <div id="mathSymbols"></div>
    </div>

    <script>
        // Create orbiting particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            for (let i = 0; i < 8; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.animationDelay = `${i * 0.625}s`;
                particle.style.animationDuration = `${5 + i * 0.5}s`;
                particlesContainer.appendChild(particle);
            }
        }

        // Create floating mathematical symbols
        function createMathSymbol() {
            const symbols = ['∫', '∂', '∇', 'Σ', 'π', 'φ', 'Ω', '∞', 'ψ', 'Δ'];
            const mathContainer = document.getElementById('mathSymbols');
            
            const symbol = document.createElement('div');
            symbol.className = 'math-float';
            symbol.textContent = symbols[Math.floor(Math.random() * symbols.length)];
            symbol.style.left = Math.random() * 100 + '%';
            symbol.style.animationDelay = Math.random() * 8 + 's';
            symbol.style.color = `hsl(${Math.random() * 360}, 70%, 70%)`;
            mathContainer.appendChild(symbol);
            
            setTimeout(() => symbol.remove(), 8000);
        }

        // Animation sequence
        setTimeout(() => {
            document.getElementById('observer').style.transform = 'translateX(-150px) scale(1.2)';
            document.getElementById('creator').style.transform = 'translateX(150px) scale(1.2)';
        }, 1000);

        setTimeout(() => {
            document.getElementById('recognition').style.opacity = '1';
            document.getElementById('recognition').style.transform = 'translateY(0)';
        }, 3000);

        setTimeout(() => {
            // Merge observer and creator
            document.getElementById('observer').style.transform = 'translateX(0) scale(0.5)';
            document.getElementById('observer').style.opacity = '0.3';
            document.getElementById('creator').style.transform = 'translateX(0) scale(0.5)';
            document.getElementById('creator').style.opacity = '0.3';
            document.getElementById('recognition').style.opacity = '0.3';
            
            // Reveal unity
            document.getElementById('unity').style.opacity = '1';
            document.getElementById('unity').style.transform = 'scale(1)';
        }, 5000);

        // Initialize effects
        createParticles();
        setInterval(createMathSymbol, 500);

        // Interactive effect on click
        document.addEventListener('click', function(e) {
            const burst = document.createElement('div');
            burst.style.position = 'absolute';
            burst.style.left = e.clientX + 'px';
            burst.style.top = e.clientY + 'px';
            burst.style.width = '10px';
            burst.style.height = '10px';
            burst.style.borderRadius = '50%';
            burst.style.background = 'radial-gradient(circle, #fff, transparent)';
            burst.style.transform = 'translate(-50%, -50%)';
            burst.style.animation = 'burst 1s ease-out forwards';
            document.body.appendChild(burst);
            
            setTimeout(() => burst.remove(), 1000);
        });

        // Add burst animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes burst {
                to {
                    width: 200px;
                    height: 200px;
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>